@Scripts.Render("~/Scripts/UnitCreate.js")
@model custom_study_plan_generator.MetaObjects.UnitMeta
@using custom_study_plan_generator.Models 


@{
    ViewBag.Title = "Create";
}

<div class="prerequisitesIndexCRUDHeading">

    <h3 class="CRUDFont">Create</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="CRUDFont">Unit</h4>

            @if (Session["unitExists"] != null)
            {
                <div id="unitExists" class="error3">Error, a unit with this code already exists.</div>
                Session["unitExists"] = null;
            }
            
            <div id="semester" class="error3">Error, you must choose at least one semester.</div>
            
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.unit_code, "Unit Code", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.unit_code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.unit_code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.name, "Unit Name", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.type_code, "Unit Type", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10">
                    @Html.DropDownList("type_code", new SelectList(ViewBag.type_code, "Value", "Text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.type_code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.semester1, "Semester 1", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.semester1)
                        @Html.ValidationMessageFor(model => model.semester1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.semester2, "Semester 2", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.semester2)
                        @Html.ValidationMessageFor(model => model.semester2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="submit" class="prerequisiteCRUDCreateButton CRUDFont btn btn-default" type="submit" value="Create" />
                </div>
            </div>
        </div>
    }

    <div class="prerequisitesCRUDCreateBack">
        @Html.ActionLink("Back to List", "Index", null, null, new { @class = "prerequisitesCRUDLink CRUDFont" })
    </div>

</div>
