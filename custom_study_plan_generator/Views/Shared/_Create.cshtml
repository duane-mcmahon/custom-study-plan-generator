@Scripts.Render("~/Scripts/UnitPrerequisitesCreate.js")

@model custom_study_plan_generator.Models.UnitPrerequisite

@{
    ViewBag.Title = "Create";
}

<div class ="prerequisitesIndexCRUDHeading">

    <h3 class="CRUDFont">Create</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="CRUDFont">Unit Prerequisite</h4>




            @if (Session["prereqExists"] != null)
            {
                <div id="prereqExists" class="error3">Error, prerequisite already exists.</div>
                Session["prereqExists"] = null;
            }

            <div id="unitPrereqSame" class="error3">Error, the unit and it's prerequisite can not be the same.</div>
            <div id="emptyLists" class="error3">Error, please select values for each dropdown list.</div>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.course_code, "Course", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10 prerequsiteCRUDCreateRow">
                    @Html.DropDownList("course_code", null, "-- Select Course --", htmlAttributes: new { @class = "form-control", onchange = "$('#submitSelect').trigger('click')", name = "action:Select", id = "courseSelect" })
                    @Html.ValidationMessageFor(model => model.course_code, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.unit_code, "Unit", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10 prerequsiteCRUDCreateRow">
                    @Html.DropDownList("unit_code", null, htmlAttributes: new { @class = "form-control prerequsiteCRUDCreateDropdownList", id = "unitDropDown" })
                    @Html.ValidationMessageFor(model => model.unit_code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.prereq_code, "Prerequisite", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10 prerequsiteCRUDCreateRow">
                    @Html.DropDownList("prereq_code", null, htmlAttributes: new { @class = "form-control prerequsiteCRUDCreateDropdownList", id = "prerequisiteDropDown" })
                    @Html.ValidationMessageFor(model => model.prereq_code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mutiple_required, "Multiple Prerequisites (a AND b AND c...)", htmlAttributes: new { @class = "control-label col-md-2 CRUDFont prequisiteCreateTitle" })
                <div class="col-md-10 prerequsiteCRUDCreateRow">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.mutiple_required)
                        @Html.ValidationMessageFor(model => model.mutiple_required, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input id="submit" class ="prerequisiteCRUDCreateButton CRUDFont" type="submit" value="Create" name="action:CreateSubmit" class="btn btn-default" />
                    <input id="submitSelect" type="submit" value="Select" name="action:Select" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div class="prerequisitesCRUDCreateBack">
        @Html.ActionLink("Back to List", "Index", null, null, new { @class = "prerequisitesCRUDLink CRUDFont" })
    </div>
</div>
