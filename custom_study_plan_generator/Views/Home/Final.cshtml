@Scripts.Render("~/Scripts/Final.js")
@using custom_study_plan_generator.MetaObjects

<div class="body">
    <div id="backerEdit" class="backerEdit">
        <div id="textEdit" class="textEdit">
            <div class="CPcol1 inline">
                <div class="inline">
                    Student:
                </div>
                <div class="inline">
                    XYZ
                </div>
            </div>

            <div class="headingCP pagewideFont inline CPcol2">
                Create Mode
            </div>

            <div class="CPcol3 inline">
                <div class="inline">
                    Course:
                </div>
                <div class="inline">
                    Course 1
                </div>
            </div>
            <div class="inline CPcol1desc">

            </div>
            <div class="pagewideFont CPcol2desc inline">
                Review the final plan, then click "Save Plan" to save and upload.
            </div>
            <div class="inline CPcol3desc">
       
                <button id = "savePlan" type="button" class="CPButton" name="savePlan" value="savePlan" title="Save and Upload Plan">Save/Upload Plan</button><br />
                <button id = "home" type="button" class="CPButton2" name="home" value="home" title="Return Home">Home</button><br />
                <div id="error2" class="errors"></div>
                
            </div>

            @{
                List<CoursePlan> studentPlan = (List<CoursePlan>)Session["StudentPlan"];
                Int32 numUnits = (Int32)Session["numUnits"];
            }

            <script>

                    var numUnits = '@(Session["numUnits"])';
                    if ('@(studentPlan)' != null) {
                        var studentPlan = JSON.parse('@Html.Raw(Json.Encode(studentPlan))');
                    }

            </script>

            <div id="planTable" class="planTable">
                <div class="row1">

                    @{
                        var semesters = numUnits / 4;
                        var header = "";
                    }



                    @for (var h = 1; h <= semesters; h++)
                    {

                        header = "headerPlanTable";
                        if (h == 1)
                        {
                            header = "headerPlanTable" + h;
                        }
                        <div id="topCell" class="inlineGrid planHeader @header">
                            Sem @h
                        </div>
                    }

                </div>

                @{

                    var count = 1;
                    var countRow = 2;
                    var countCell = 1;
                    var countCol = 1;
                    string rowClass = "";
                    string idCell = "";
                    string idCont = "";
                    string col = "";

                    for (var x = 1; x <= numUnits; x++)
                    {

                        rowClass = "row" + countRow;
                        idCell = countCell.ToString();
                        idCont = "p" + countCell;


                        if (count % semesters == 1)
                        {
                            @:<div class="@rowClass">
                                                              countCol = 1;
                        }

                        col = "col";
                        if (countCol == 1)
                        {
                            col = "col" + countCol;
                        }

                        <div id="@idCont" class="inlineGrid @col cell lastRow target planCell" ondragover="allowDrop(event)" ondrop="drop(event, this)">

                        </div>

                        if (count % semesters == 0)
                        {
                            @:</div>
                                countCell = countRow;
                                countRow++;
                        }


                        if (count % semesters != 0)
                        {
                            countCell += 4;
                        }
                        count++;
                        countCol++;
                    }
                }
            </div>

        </div>
    </div>
</div>

